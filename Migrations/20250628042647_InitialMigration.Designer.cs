// <auto-generated />
using System;
using FinanceManagementApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceSubstantialApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250628042647_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceSubstantialApp.Models.ChartOfAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ChartOfAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountName = "Cash",
                            AccountNumber = "1010",
                            AccountType = 0,
                            CurrentBalance = 0m,
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            AccountName = "Accounts Receivable",
                            AccountNumber = "1200",
                            AccountType = 0,
                            CurrentBalance = 0m,
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            AccountName = "Accounts Payable",
                            AccountNumber = "2010",
                            AccountType = 1,
                            CurrentBalance = 0m,
                            IsActive = true
                        },
                        new
                        {
                            Id = 4,
                            AccountName = "Owner's Equity",
                            AccountNumber = "3010",
                            AccountType = 2,
                            CurrentBalance = 0m,
                            IsActive = true
                        },
                        new
                        {
                            Id = 5,
                            AccountName = "Sales Revenue",
                            AccountNumber = "4010",
                            AccountType = 3,
                            CurrentBalance = 0m,
                            IsActive = true
                        },
                        new
                        {
                            Id = 6,
                            AccountName = "Rent Expense",
                            AccountNumber = "5010",
                            AccountType = 4,
                            CurrentBalance = 0m,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("FinanceSubstantialApp.Models.JournalEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("JournalEntries");
                });

            modelBuilder.Entity("FinanceSubstantialApp.Models.JournalEntry", b =>
                {
                    b.HasOne("FinanceSubstantialApp.Models.ChartOfAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
